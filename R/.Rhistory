if (!require("RgoogleMaps")) { install.packages("RgoogleMaps"); require("RgoogleMaps") } if (!require("openxlsx")) { install.packages("openxlsx"); require("openxlsx") } if (!require("loa")) { install.packages("loa"); require("loa") } if (!require("ggplot2")) { install.packages("ggplot2"); require("ggplot2") } library(stringr) library(gridExtra) dataDir = "C:/Users/stepa/OneDrive/DataScience/RgoogleMap/RGM" plotDir = "C:/Users/stepa/OneDrive/DataScience/RgoogleMap/RGM/Images" df = read.xlsx(file.path(dataDir, "Bus stops.xlsx"), sheet = 1, startRow = 1) colnames(df)[c(1:7)] = c("name", "bus", "tram", "trolley", "minibus", "lat", "lon") df$lat = as.numeric(df$lat) df$lon = as.numeric(df$lon) # Number of routes df = cbind( df, str_count(df$bus, ",")     + 1 ) df = cbind( df, str_count(df$tram, ",")    + 1 ) df = cbind( df, str_count(df$trolley, ",") + 1 ) df = cbind( df, str_count(df$minibus, ",") + 1 ) colnames(df)[c(10:13)] = c("n_bus", "n_tram", "n_trolley", "n_minibus") df$n_bus[is.na(df$n_bus)] = 0 df$n_tram[is.na(df$n_tram)] = 0 df$n_trolley[is.na(df$n_trolley)] = 0 df$n_minibus[is.na(df$n_minibus)] = 0 df = cbind( df, df$n_bus + df$n_tram + df$n_trolley + df$n_minibus ) colnames(df)[14] = "n_all" # Vehicle numbers list ---- library(gtools) bus_numbers = unique( unlist( strsplit( df$bus, ", ") ) )  bus_numbers = mixedsort( bus_numbers )[-c(length(bus_numbers))] tram_numbers = unique(unlist(strsplit(df$tram, ", "))) tram_numbers = mixedsort(tram_numbers)[-c(length(tram_numbers))] trolley_numbers = unique(unlist(strsplit(df$trolley, ", "))) trolley_numbers = mixedsort(trolley_numbers)[-c(length(trolley_numbers))] minibus_numbers = unique(unlist(strsplit(df$minibus, ", "))) minibus_numbers = mixedsort(minibus_numbers)[-c(length(minibus_numbers))] bus_numbers_circled = c("5","10","11","18л","18п","22","27","28","35","35а","37","39","40","42","42а", "45","47","49","51","54","58","60","61","68","69","69а", "78","83","89","90","90а", "94","96","99") minibus_numbers_circled = c("12", "20", "23", "24", "25", "38", "40", "49", "93", "94", "96") trolley_numbers_circled = c("2", "12") tram_numbers_circled = NULL # Routes and stpos distances data.frame ---- #if (!require("geosphere")) { install.packages("geosphere"); require("geosphere") } #if (!require("rgeos")) { install.packages("rgeos"); require("rgeos") } Route = function(df4, stop_n) {     i = dim(df4)[1]     df4 = cbind(df4, 1:dim(df4)[1])     tmp = 1     k = stop_n     df_tmp = df4[k,]     while (i >= 0) {         if (length(k) != dim(df4)[1]) {             set1sp <- SpatialPoints(df4[c(k), c('lon', 'lat')])             set2sp <- SpatialPoints(df4[-c(k), c('lon', 'lat')])             df_tmp2 = df4[-c(k),]             kk = which(gDistance(set1sp, set2sp, byid = TRUE) == min(gDistance(set1sp, set2sp, byid = TRUE)), arr.ind = TRUE)[1, 1]             df_tmp = rbind(df_tmp, df_tmp2[c(kk),])             k = c(k, df_tmp2[kk, 15])         }         i = i - 1     }     return(df_tmp) } Route_length = function(df) {     r_len = NULL     for (k in c(1:(dim(df)[1] - 1))) {         #        set1sp <- SpatialPoints(df[k, c('lon', 'lat')])         #       set2sp <- SpatialPoints(df[k+1, c('lon', 'lat')])         r_len = c(r_len, distm(df[c(k), c('lon', 'lat')], df[c(k + 1), c('lon', 'lat')]))     }     return(r_len) } Route_shortest = function(df4) {     min_r = sum(Route_length(Route(df4, 1)))     min_k = 1     for (i in c(2:dim(df4)[1])) {         r_l_ = sum(Route_length(Route(df4, i)))         if (r_l_ < min_r) {             min_r = r_l_             min_k = i         }     }     return(min_k) } df_routes = function(df_stops, numbers) {     r_l = data.frame(Route_n = NULL, dist = NULL, V1 = NULL, V2 = NULL, V3 = NULL, V4 = NULL, V5 = NULL, V6 = NULL, V7 = NULL, V8 = NULL, V9 = NULL, V10 = NULL, V11 = NULL, V12 = NULL, V13 = NULL, V14 = NULL, V15 = NULL)     for (route_n in numbers) {         cat(paste(".", route_n, ".", sep = ""))         df4 = df[Stops_list_for_route(df_stops, route_n),]         df_tmp = Route(df4, Route_shortest(df4))         r_l = rbind(r_l, cbind(rep(route_n, dim(df_tmp)[1]), c(Route_length(df_tmp), NA), df_tmp))     }     colnames(r_l) = c("route_n", "next_stop_dist", colnames(df))     df_tmp = r_l     del_list = NULL     for (k in c(2:dim(df_tmp)[1])) {         if ((df_tmp$route_n[k - 1] == df_tmp$route_n[k]) &&             (df_tmp$name[k - 1] == df_tmp$name[k]) &&             (df_tmp$next_stop_dist[k - 1] <= 150)) {             # del string             del_list = c(del_list, k - 1)         }     }     #df_tmp[-del_list, 3]     return(df_tmp[-del_list,]) } #df_bus_routes = df_routes(df$bus, bus_numbers) #write.csv2(x = df_bus_routes, file = file.path(dataDir, "Bus routes.csv")) df_bus_routes = read.csv2(file = file.path(dataDir, "Bus routes.csv"))[, - c(1)] #df_minibus_routes = df_routes(df$minibus, minibus_numbers) #write.csv2(x = df_minibus_routes, file = file.path(dataDir, "Minibus routes.csv")) df_minibus_routes = read.csv2(file = file.path(dataDir, "Minibus routes.csv"))[, - c(1)] #df_tram_routes = df_routes(df$tram, tram_numbers) #write.csv2(x = df_trolley_routes, file = file.path(dataDir, "Trolley routes.csv")) df_trolley_routes = read.csv2(file = file.path(dataDir, "Trolley routes.csv"))[, - c(1)] #df_trolley_routes = df_routes(df$trolley, trolley_numbers) #write.csv2(x = df_tram_routes, file = file.path(dataDir, "Tram routes.csv")) df_tram_routes = read.csv2(file = file.path(dataDir, "Tram routes.csv"))[, - c(1)]
dataDir = "C:/Users/stepa/OneDrive/DataScience/RgoogleMap/RGM" plotDir = "C:/Users/stepa/OneDrive/DataScience/RgoogleMap/RGM/Images" df = read.xlsx(file.path(dataDir, "Bus stops.xlsx"), sheet = 1, startRow = 1) colnames(df)[c(1:7)] = c("name", "bus", "tram", "trolley", "minibus", "lat", "lon") df$lat = as.numeric(df$lat) df$lon = as.numeric(df$lon) # Number of routes df = cbind( df, str_count(df$bus, ",")     + 1 ) df = cbind( df, str_count(df$tram, ",")    + 1 ) df = cbind( df, str_count(df$trolley, ",") + 1 ) df = cbind( df, str_count(df$minibus, ",") + 1 ) colnames(df)[c(10:13)] = c("n_bus", "n_tram", "n_trolley", "n_minibus") df$n_bus[is.na(df$n_bus)] = 0 df$n_tram[is.na(df$n_tram)] = 0 df$n_trolley[is.na(df$n_trolley)] = 0 df$n_minibus[is.na(df$n_minibus)] = 0 df = cbind( df, df$n_bus + df$n_tram + df$n_trolley + df$n_minibus ) colnames(df)[14] = "n_all"
dataDir = "C:/Users/stepa/OneDrive/DataScience/Rostov Transport/RGM"
plotDir = "C:/Users/stepa/OneDrive/DataScience/Rostov Transport/RGM/Images"
df = read.xlsx(file.path(dataDir, "Bus stops.xlsx"), sheet = 1, startRow = 1)
colnames(df)[c(1:7)] = c("name", "bus", "tram", "trolley", "minibus", "lat", "lon") df$lat = as.numeric(df$lat) df$lon = as.numeric(df$lon) # Number of routes df = cbind( df, str_count(df$bus, ",")     + 1 ) df = cbind( df, str_count(df$tram, ",")    + 1 ) df = cbind( df, str_count(df$trolley, ",") + 1 ) df = cbind( df, str_count(df$minibus, ",") + 1 ) colnames(df)[c(10:13)] = c("n_bus", "n_tram", "n_trolley", "n_minibus") df$n_bus[is.na(df$n_bus)] = 0 df$n_tram[is.na(df$n_tram)] = 0 df$n_trolley[is.na(df$n_trolley)] = 0 df$n_minibus[is.na(df$n_minibus)] = 0 df = cbind( df, df$n_bus + df$n_tram + df$n_trolley + df$n_minibus ) colnames(df)[14] = "n_all" # Vehicle numbers list ---- library(gtools) bus_numbers = unique( unlist( strsplit( df$bus, ", ") ) )  bus_numbers = mixedsort( bus_numbers )[-c(length(bus_numbers))] tram_numbers = unique(unlist(strsplit(df$tram, ", "))) tram_numbers = mixedsort(tram_numbers)[-c(length(tram_numbers))] trolley_numbers = unique(unlist(strsplit(df$trolley, ", "))) trolley_numbers = mixedsort(trolley_numbers)[-c(length(trolley_numbers))] minibus_numbers = unique(unlist(strsplit(df$minibus, ", "))) minibus_numbers = mixedsort(minibus_numbers)[-c(length(minibus_numbers))] bus_numbers_circled = c("5","10","11","18л","18п","22","27","28","35","35а","37","39","40","42","42а", "45","47","49","51","54","58","60","61","68","69","69а", "78","83","89","90","90а", "94","96","99") minibus_numbers_circled = c("12", "20", "23", "24", "25", "38", "40", "49", "93", "94", "96") trolley_numbers_circled = c("2", "12") tram_numbers_circled = NULL # Routes and stpos distances data.frame ---- #if (!require("geosphere")) { install.packages("geosphere"); require("geosphere") } #if (!require("rgeos")) { install.packages("rgeos"); require("rgeos") } Route = function(df4, stop_n) {     i = dim(df4)[1]     df4 = cbind(df4, 1:dim(df4)[1])     tmp = 1     k = stop_n     df_tmp = df4[k,]     while (i >= 0) {         if (length(k) != dim(df4)[1]) {             set1sp <- SpatialPoints(df4[c(k), c('lon', 'lat')])             set2sp <- SpatialPoints(df4[-c(k), c('lon', 'lat')])             df_tmp2 = df4[-c(k),]             kk = which(gDistance(set1sp, set2sp, byid = TRUE) == min(gDistance(set1sp, set2sp, byid = TRUE)), arr.ind = TRUE)[1, 1]             df_tmp = rbind(df_tmp, df_tmp2[c(kk),])             k = c(k, df_tmp2[kk, 15])         }         i = i - 1     }     return(df_tmp) } Route_length = function(df) {     r_len = NULL     for (k in c(1:(dim(df)[1] - 1))) {         #        set1sp <- SpatialPoints(df[k, c('lon', 'lat')])         #       set2sp <- SpatialPoints(df[k+1, c('lon', 'lat')])         r_len = c(r_len, distm(df[c(k), c('lon', 'lat')], df[c(k + 1), c('lon', 'lat')]))     }     return(r_len) } Route_shortest = function(df4) {     min_r = sum(Route_length(Route(df4, 1)))     min_k = 1     for (i in c(2:dim(df4)[1])) {         r_l_ = sum(Route_length(Route(df4, i)))         if (r_l_ < min_r) {             min_r = r_l_             min_k = i         }     }     return(min_k) } df_routes = function(df_stops, numbers) {     r_l = data.frame(Route_n = NULL, dist = NULL, V1 = NULL, V2 = NULL, V3 = NULL, V4 = NULL, V5 = NULL, V6 = NULL, V7 = NULL, V8 = NULL, V9 = NULL, V10 = NULL, V11 = NULL, V12 = NULL, V13 = NULL, V14 = NULL, V15 = NULL)     for (route_n in numbers) {         cat(paste(".", route_n, ".", sep = ""))         df4 = df[Stops_list_for_route(df_stops, route_n),]         df_tmp = Route(df4, Route_shortest(df4))         r_l = rbind(r_l, cbind(rep(route_n, dim(df_tmp)[1]), c(Route_length(df_tmp), NA), df_tmp))     }     colnames(r_l) = c("route_n", "next_stop_dist", colnames(df))     df_tmp = r_l     del_list = NULL     for (k in c(2:dim(df_tmp)[1])) {         if ((df_tmp$route_n[k - 1] == df_tmp$route_n[k]) &&             (df_tmp$name[k - 1] == df_tmp$name[k]) &&             (df_tmp$next_stop_dist[k - 1] <= 150)) {             # del string             del_list = c(del_list, k - 1)         }     }     #df_tmp[-del_list, 3]     return(df_tmp[-del_list,]) } #df_bus_routes = df_routes(df$bus, bus_numbers) #write.csv2(x = df_bus_routes, file = file.path(dataDir, "Bus routes.csv")) df_bus_routes = read.csv2(file = file.path(dataDir, "Bus routes.csv"))[, - c(1)] #df_minibus_routes = df_routes(df$minibus, minibus_numbers) #write.csv2(x = df_minibus_routes, file = file.path(dataDir, "Minibus routes.csv")) df_minibus_routes = read.csv2(file = file.path(dataDir, "Minibus routes.csv"))[, - c(1)] #df_tram_routes = df_routes(df$tram, tram_numbers) #write.csv2(x = df_trolley_routes, file = file.path(dataDir, "Trolley routes.csv")) df_trolley_routes = read.csv2(file = file.path(dataDir, "Trolley routes.csv"))[, - c(1)] #df_trolley_routes = df_routes(df$trolley, trolley_numbers) #write.csv2(x = df_tram_routes, file = file.path(dataDir, "Tram routes.csv")) df_tram_routes = read.csv2(file = file.path(dataDir, "Tram routes.csv"))[, - c(1)]
